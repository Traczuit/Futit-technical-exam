1a)
Esto trae lo siguiente, en forma de alertas:
25
81
2
undefined

1b) Esta linea no funciona porque cuadradoDeA no existe fuera de la función calculaBinomio(), por lo que siempre va a dar undefined

2)
alert(s2.toUpperCase()); // cambiamos toUpperCase por toLowerCase
alert(s2.toLowerCase()); // esto nos daría como resultado "hello world!"

3) Por como está armada la función mostrar(), lo único que se puede pasar como param es otra función, así que la mejor opción es armar otra función que ejecute console.log('Openbravo!!!'):

mostrar = function (param) {
  param();
};

function openBravo() {
  console.log("Openbravo!!!");
}

mostrar(openBravo);

4) 
function is_diagonal_matrix(user_matrix) {
    for (var i = 0; i < user_matrix.length; i++) {
        for (var j = 0; j < user_matrix.length; j++) {
            if (i !== j && user_matrix[i][j] !== 0) 
              return false;
        }
    }
    return true;
}


console.log(is_diagonal_matrix([[1, 0, 0], [0, 2, 0], [0, 0, 3] ]));
console.log(is_diagonal_matrix([[1, 0, 0], [0, 2, 3], [0, 0, 3] ]));

React:

1) A y C

2) B

3) B

4) The state is a built-in React object that is used to contain data or information about the component. A component's state can change over time; whenever it changes, the component re-renders.

5) 
    constructor()
    static getDerivedStateFromProps()
    render()
    componentDidMount()
    shouldComponentUpdate()
    getSnapshotBeforeUpdate()
    componentDidUpdate()
    componentWillUnmount()
    static getDerivedStateFromError()
    componentDidCatch()
    setState()
    forceUpdate()

6) La primer respuesta sería usar setState()

   this.setState({valueToUpdate: 'New Value'});

   Otra opción es useState()

   const [count, setCount] = useState(0)

   const incrementCount = increment => {
    setCount(count + increment)
   }

   ...

   <Button increment={1} onClickFunction={incrementCount} />

7) B. A solamente se puede usar en constructor()

8) The component responds by re-rendering

9) 
  const ListComp = () => {
    const ListItems = people.map((person) => {
      return (
        <ul type="disc">
          <li>{person.firstname}</li>
          <li>{person.lastname}</li>
          <li>{person.dni}</li>
        </ul>
      );
    });
    return <div>{ListItems}</div>;
  };

10) 
  function Echo(data) {
    console.log(data)
    return <h1>{data.string}</h1>;
  }

  ...

  <Echo string="Openbravo!!!" />

  11) D, import name from 'name';

  12) D, import { MyComponent } from './MyComponent.js';

  13) No devuelve o renderiza nada, ni se le asigna un valor a una variable

  14) Es un componente que muestra el valor de "property", que por defecto está en 1, y un botón que al clickearlo aumenta el valor de "property".